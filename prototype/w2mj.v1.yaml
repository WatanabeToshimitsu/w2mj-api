openapi: 3.0.0
info:
  title: w2mj api
  version: '1.0'
  description: w2mj api schema
  contact:
    name: Toshimitsu Watanabe
    email: kz86nu@gmail.com
servers:
  - url: 'http://localhost:1111'
paths:
  /poll:
    post:
      summary: create new poll
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '417':
          description: Expectation Failed
      operationId: create-new-poll
      description: create new poll. returns poll ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Poll'
    parameters: []
  '/poll/{pollId}':
    parameters:
      - schema:
          type: string
        name: pollId
        in: path
        required: true
    get:
      summary: find poll by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      operationId: get-poll
      description: returns poll object contains all data of poll.
  '/poll/{pollId}/addParticipant':
    parameters:
      - schema:
          type: string
        name: pollId
        in: path
        required: true
    post:
      summary: add new participant into poll
      tags: []
      responses:
        '200':
          description: OK
        '417':
          description: Expectation Failed
      operationId: post-addParticipant
      description: add new participant into poll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participants'
  '/poll/{pollId}/{participantName}':
    parameters:
      - schema:
          type: string
        name: pollId
        in: path
        required: true
      - schema:
          type: string
        name: participantName
        in: path
        required: true
    post:
      summary: ''
      operationId: update-participant-availability
      responses:
        '200':
          description: OK
        '417':
          description: Expectation Failed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
components:
  schemas:
    Poll:
      title: Poll
      type: object
      x-examples: {}
      properties:
        id:
          type: string
        dates:
          type: array
          items:
            type: string
        startTime:
          type: string
        endTime:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
      required:
        - id
        - dates
        - startTime
        - endTime
        - participants
    Participant:
      title: Participant
      type: object
      description: single participant's detail
      properties:
        id:
          type: string
        name:
          type: string
        password:
          type: string
        availability:
          $ref: '#/components/schemas/Availability'
    Availability:
      title: Availability
      type: array
      items:
        type: object
        properties:
          start:
            type: string
          end:
            type: string
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
      description: ''
tags:
  - name: test
    description: test
